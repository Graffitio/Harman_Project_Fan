
Project_Fan_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000aa  00800100  00000c46  00000cda  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c46  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000023  008001aa  008001aa  00000d84  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d84  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000db4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00000df4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001dc1  00000000  00000000  00000f44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d99  00000000  00000000  00002d05  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e93  00000000  00000000  00003a9e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000250  00000000  00000000  00004934  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006ec  00000000  00000000  00004b84  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006e5  00000000  00000000  00005270  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  00005955  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 e4       	ldi	r30, 0x46	; 70
  a0:	fc e0       	ldi	r31, 0x0C	; 12
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 3a       	cpi	r26, 0xAA	; 170
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa ea       	ldi	r26, 0xAA	; 170
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ad 3c       	cpi	r26, 0xCD	; 205
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	cf d3       	rcall	.+1950   	; 0x862 <main>
  c4:	be c5       	rjmp	.+2940   	; 0xc42 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <Button_init>:
  c8:	fc 01       	movw	r30, r24
  ca:	71 83       	std	Z+1, r23	; 0x01
  cc:	60 83       	st	Z, r22
  ce:	53 83       	std	Z+3, r21	; 0x03
  d0:	42 83       	std	Z+2, r20	; 0x02
  d2:	24 83       	std	Z+4, r18	; 0x04
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	85 83       	std	Z+5, r24	; 0x05
  d8:	fb 01       	movw	r30, r22
  da:	30 81       	ld	r19, Z
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	02 c0       	rjmp	.+4      	; 0xe6 <Button_init+0x1e>
  e2:	88 0f       	add	r24, r24
  e4:	99 1f       	adc	r25, r25
  e6:	2a 95       	dec	r18
  e8:	e2 f7       	brpl	.-8      	; 0xe2 <Button_init+0x1a>
  ea:	80 95       	com	r24
  ec:	83 23       	and	r24, r19
  ee:	80 83       	st	Z, r24
  f0:	08 95       	ret

000000f2 <BUTTON_getState>:
  f2:	fc 01       	movw	r30, r24
  f4:	a2 81       	ldd	r26, Z+2	; 0x02
  f6:	b3 81       	ldd	r27, Z+3	; 0x03
  f8:	8c 91       	ld	r24, X
  fa:	21 e0       	ldi	r18, 0x01	; 1
  fc:	30 e0       	ldi	r19, 0x00	; 0
  fe:	04 80       	ldd	r0, Z+4	; 0x04
 100:	02 c0       	rjmp	.+4      	; 0x106 <BUTTON_getState+0x14>
 102:	22 0f       	add	r18, r18
 104:	33 1f       	adc	r19, r19
 106:	0a 94       	dec	r0
 108:	e2 f7       	brpl	.-8      	; 0x102 <BUTTON_getState+0x10>
 10a:	28 23       	and	r18, r24
 10c:	59 f4       	brne	.+22     	; 0x124 <BUTTON_getState+0x32>
 10e:	85 81       	ldd	r24, Z+5	; 0x05
 110:	81 30       	cpi	r24, 0x01	; 1
 112:	41 f4       	brne	.+16     	; 0x124 <BUTTON_getState+0x32>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 114:	a3 ed       	ldi	r26, 0xD3	; 211
 116:	b0 e3       	ldi	r27, 0x30	; 48
 118:	11 97       	sbiw	r26, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <BUTTON_getState+0x26>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <BUTTON_getState+0x2c>
 11e:	00 00       	nop
 120:	15 82       	std	Z+5, r1	; 0x05
 122:	08 95       	ret
 124:	22 23       	and	r18, r18
 126:	69 f0       	breq	.+26     	; 0x142 <BUTTON_getState+0x50>
 128:	85 81       	ldd	r24, Z+5	; 0x05
 12a:	81 11       	cpse	r24, r1
 12c:	0c c0       	rjmp	.+24     	; 0x146 <BUTTON_getState+0x54>
 12e:	83 ed       	ldi	r24, 0xD3	; 211
 130:	90 e3       	ldi	r25, 0x30	; 48
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <BUTTON_getState+0x40>
 136:	00 c0       	rjmp	.+0      	; 0x138 <BUTTON_getState+0x46>
 138:	00 00       	nop
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	85 83       	std	Z+5, r24	; 0x05
 13e:	82 e0       	ldi	r24, 0x02	; 2
 140:	08 95       	ret
 142:	80 e0       	ldi	r24, 0x00	; 0
 144:	08 95       	ret
 146:	80 e0       	ldi	r24, 0x00	; 0
 148:	08 95       	ret

0000014a <BUTTON_spin_getState>:
 14a:	fc 01       	movw	r30, r24
 14c:	a2 81       	ldd	r26, Z+2	; 0x02
 14e:	b3 81       	ldd	r27, Z+3	; 0x03
 150:	8c 91       	ld	r24, X
 152:	21 e0       	ldi	r18, 0x01	; 1
 154:	30 e0       	ldi	r19, 0x00	; 0
 156:	04 80       	ldd	r0, Z+4	; 0x04
 158:	02 c0       	rjmp	.+4      	; 0x15e <BUTTON_spin_getState+0x14>
 15a:	22 0f       	add	r18, r18
 15c:	33 1f       	adc	r19, r19
 15e:	0a 94       	dec	r0
 160:	e2 f7       	brpl	.-8      	; 0x15a <BUTTON_spin_getState+0x10>
 162:	28 23       	and	r18, r24
 164:	59 f4       	brne	.+22     	; 0x17c <BUTTON_spin_getState+0x32>
 166:	85 81       	ldd	r24, Z+5	; 0x05
 168:	81 30       	cpi	r24, 0x01	; 1
 16a:	41 f4       	brne	.+16     	; 0x17c <BUTTON_spin_getState+0x32>
 16c:	a3 ed       	ldi	r26, 0xD3	; 211
 16e:	b0 e3       	ldi	r27, 0x30	; 48
 170:	11 97       	sbiw	r26, 0x01	; 1
 172:	f1 f7       	brne	.-4      	; 0x170 <BUTTON_spin_getState+0x26>
 174:	00 c0       	rjmp	.+0      	; 0x176 <BUTTON_spin_getState+0x2c>
 176:	00 00       	nop
 178:	15 82       	std	Z+5, r1	; 0x05
 17a:	08 95       	ret
 17c:	22 23       	and	r18, r18
 17e:	a9 f0       	breq	.+42     	; 0x1aa <BUTTON_spin_getState+0x60>
 180:	85 81       	ldd	r24, Z+5	; 0x05
 182:	81 11       	cpse	r24, r1
 184:	14 c0       	rjmp	.+40     	; 0x1ae <BUTTON_spin_getState+0x64>
 186:	83 ed       	ldi	r24, 0xD3	; 211
 188:	90 e3       	ldi	r25, 0x30	; 48
 18a:	01 97       	sbiw	r24, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <BUTTON_spin_getState+0x40>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <BUTTON_spin_getState+0x46>
 190:	00 00       	nop
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	85 83       	std	Z+5, r24	; 0x05
 196:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 19a:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 19e:	01 96       	adiw	r24, 0x01	; 1
 1a0:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <__data_end+0x1>
 1a4:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <__data_end>
 1a8:	08 95       	ret
 1aa:	80 e0       	ldi	r24, 0x00	; 0
 1ac:	08 95       	ret
 1ae:	80 e0       	ldi	r24, 0x00	; 0
 1b0:	08 95       	ret

000001b2 <Fan_Init>:
#include "Fan.h"

void Fan_Init()
{
	// I2C LCD 초기화
	LCD_Init();
 1b2:	2d d3       	rcall	.+1626   	; 0x80e <LCD_Init>
	
	// Button Setting
	LED_DDR = 0xff; // PORTA 출력 설정
 1b4:	8f ef       	ldi	r24, 0xFF	; 255
 1b6:	8a bb       	out	0x1a, r24	; 26
	
	Button_init(&btnStop, &BUTTON_DDR, &BUTTON_PIN, BUTTON_STOP); // PORTC 0번 핀 입력 활성화
 1b8:	20 e0       	ldi	r18, 0x00	; 0
 1ba:	43 e3       	ldi	r20, 0x33	; 51
 1bc:	50 e0       	ldi	r21, 0x00	; 0
 1be:	64 e3       	ldi	r22, 0x34	; 52
 1c0:	70 e0       	ldi	r23, 0x00	; 0
 1c2:	80 ec       	ldi	r24, 0xC0	; 192
 1c4:	91 e0       	ldi	r25, 0x01	; 1
 1c6:	80 df       	rcall	.-256    	; 0xc8 <Button_init>
	Button_init(&btn_1stage, &BUTTON_DDR, &BUTTON_PIN, BUTTON_1stage); // PORTC 1번 핀 입력 활성화
 1c8:	21 e0       	ldi	r18, 0x01	; 1
 1ca:	43 e3       	ldi	r20, 0x33	; 51
 1cc:	50 e0       	ldi	r21, 0x00	; 0
 1ce:	64 e3       	ldi	r22, 0x34	; 52
 1d0:	70 e0       	ldi	r23, 0x00	; 0
 1d2:	86 ec       	ldi	r24, 0xC6	; 198
 1d4:	91 e0       	ldi	r25, 0x01	; 1
 1d6:	78 df       	rcall	.-272    	; 0xc8 <Button_init>
	Button_init(&btn_2stage, &BUTTON_DDR, &BUTTON_PIN, BUTTON_2stage); // PORTC 2번 핀 입력 활성화
 1d8:	22 e0       	ldi	r18, 0x02	; 2
 1da:	43 e3       	ldi	r20, 0x33	; 51
 1dc:	50 e0       	ldi	r21, 0x00	; 0
 1de:	64 e3       	ldi	r22, 0x34	; 52
 1e0:	70 e0       	ldi	r23, 0x00	; 0
 1e2:	8c ea       	ldi	r24, 0xAC	; 172
 1e4:	91 e0       	ldi	r25, 0x01	; 1
 1e6:	70 df       	rcall	.-288    	; 0xc8 <Button_init>
	Button_init(&btn_3stage, &BUTTON_DDR, &BUTTON_PIN, BUTTON_3stage); // PORTC 3번 핀 입력 활성화
 1e8:	23 e0       	ldi	r18, 0x03	; 3
 1ea:	43 e3       	ldi	r20, 0x33	; 51
 1ec:	50 e0       	ldi	r21, 0x00	; 0
 1ee:	64 e3       	ldi	r22, 0x34	; 52
 1f0:	70 e0       	ldi	r23, 0x00	; 0
 1f2:	8a eb       	ldi	r24, 0xBA	; 186
 1f4:	91 e0       	ldi	r25, 0x01	; 1
 1f6:	68 df       	rcall	.-304    	; 0xc8 <Button_init>
	Button_init(&btn_spin, &BUTTON_DDR, &BUTTON_PIN, BUTTON_spin); // PORTC 4번 핀 입력 활성화
 1f8:	24 e0       	ldi	r18, 0x04	; 4
 1fa:	43 e3       	ldi	r20, 0x33	; 51
 1fc:	50 e0       	ldi	r21, 0x00	; 0
 1fe:	64 e3       	ldi	r22, 0x34	; 52
 200:	70 e0       	ldi	r23, 0x00	; 0
 202:	84 eb       	ldi	r24, 0xB4	; 180
 204:	91 e0       	ldi	r25, 0x01	; 1
 206:	60 df       	rcall	.-320    	; 0xc8 <Button_init>
	
	// PWM Setting
	DDRF |= (1<<PINF4) | (1<<PINF5); // PINF4, 5 출력 설정
 208:	e1 e6       	ldi	r30, 0x61	; 97
 20a:	f0 e0       	ldi	r31, 0x00	; 0
 20c:	80 81       	ld	r24, Z
 20e:	80 63       	ori	r24, 0x30	; 48
 210:	80 83       	st	Z, r24
	TCCR0 |= (1<<CS02) | (1<<CS01) | (0<<CS00); // 256분주
 212:	83 b7       	in	r24, 0x33	; 51
 214:	86 60       	ori	r24, 0x06	; 6
 216:	83 bf       	out	0x33, r24	; 51
	TCCR0 |= (1<<WGM01) | (1<<WGM00); // Fast PWM mode
 218:	83 b7       	in	r24, 0x33	; 51
 21a:	88 64       	ori	r24, 0x48	; 72
 21c:	83 bf       	out	0x33, r24	; 51
	TCCR0 |= (1<<COM01) | (0<<COM00); // 비반전 모드
 21e:	83 b7       	in	r24, 0x33	; 51
 220:	80 62       	ori	r24, 0x20	; 32
 222:	83 bf       	out	0x33, r24	; 51
	DDRB |= (1<<DDRB4); // MOTOR 제어
 224:	87 b3       	in	r24, 0x17	; 23
 226:	80 61       	ori	r24, 0x10	; 16
 228:	87 bb       	out	0x17, r24	; 23
	
	// Head Spin
	TCCR1A |= (1<<WGM11) | (0<<WGM10); // Fast PWM(mode 14) 세팅
 22a:	8f b5       	in	r24, 0x2f	; 47
 22c:	82 60       	ori	r24, 0x02	; 2
 22e:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1<<WGM13) | (1<<WGM12);
 230:	8e b5       	in	r24, 0x2e	; 46
 232:	88 61       	ori	r24, 0x18	; 24
 234:	8e bd       	out	0x2e, r24	; 46
	TCCR1A |= (1<<COM1A1) | (0<<COM1A0);
 236:	8f b5       	in	r24, 0x2f	; 47
 238:	80 68       	ori	r24, 0x80	; 128
 23a:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (0<<CS12) | (1<<CS11) | (1<<CS10);
 23c:	8e b5       	in	r24, 0x2e	; 46
 23e:	83 60       	ori	r24, 0x03	; 3
 240:	8e bd       	out	0x2e, r24	; 46
	TCCR1C = 0x00; // default가 0이라 안 써줘도 됨		
 242:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	ICR1 = 4999;
 246:	87 e8       	ldi	r24, 0x87	; 135
 248:	93 e1       	ldi	r25, 0x13	; 19
 24a:	97 bd       	out	0x27, r25	; 39
 24c:	86 bd       	out	0x26, r24	; 38
 24e:	08 95       	ret

00000250 <Fan_Start_signal>:
}

void Fan_Start_signal()
{
	// Fan Start Sign
	LCD_WriteCommand(COMMAND_DISPLAY_CLEAR);
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	a1 d2       	rcall	.+1346   	; 0x796 <LCD_WriteCommand>
	LCD_WriteStringXY(0,0," Hello Modesty! ");
 254:	40 e0       	ldi	r20, 0x00	; 0
 256:	51 e0       	ldi	r21, 0x01	; 1
 258:	60 e0       	ldi	r22, 0x00	; 0
 25a:	80 e0       	ldi	r24, 0x00	; 0
 25c:	cf d2       	rcall	.+1438   	; 0x7fc <LCD_WriteStringXY>
	LCD_WriteStringXY(1,0,"Please Press Btn");
 25e:	41 e1       	ldi	r20, 0x11	; 17
 260:	51 e0       	ldi	r21, 0x01	; 1
 262:	60 e0       	ldi	r22, 0x00	; 0
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	ca d2       	rcall	.+1428   	; 0x7fc <LCD_WriteStringXY>
 268:	2f eb       	ldi	r18, 0xBF	; 191
 26a:	87 e2       	ldi	r24, 0x27	; 39
 26c:	99 e0       	ldi	r25, 0x09	; 9
 26e:	21 50       	subi	r18, 0x01	; 1
 270:	80 40       	sbci	r24, 0x00	; 0
 272:	90 40       	sbci	r25, 0x00	; 0
 274:	e1 f7       	brne	.-8      	; 0x26e <Fan_Start_signal+0x1e>
 276:	00 c0       	rjmp	.+0      	; 0x278 <Fan_Start_signal+0x28>
 278:	00 00       	nop
	_delay_ms(3000);
	Fan_run_status = Fan_initial;
 27a:	84 e0       	ldi	r24, 0x04	; 4
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <Fan_run_status+0x1>
 282:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <Fan_run_status>
 286:	08 95       	ret

00000288 <Spin_status_LED>:
	}
}

void Spin_status_LED()
{
	if (spin_cnt == 1)
 288:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 28c:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 290:	01 97       	sbiw	r24, 0x01	; 1
 292:	19 f4       	brne	.+6      	; 0x29a <Spin_status_LED+0x12>
	{
		LED_PORT |= (1<<PINA3);
 294:	8b b3       	in	r24, 0x1b	; 27
 296:	88 60       	ori	r24, 0x08	; 8
 298:	8b bb       	out	0x1b, r24	; 27
 29a:	08 95       	ret

0000029c <Fan_Stage>:
	Fan_run_status = Fan_initial;
}

void Fan_Stage()
{
	if (BUTTON_getState(&btnStop) == ACT_RELEASED)
 29c:	80 ec       	ldi	r24, 0xC0	; 192
 29e:	91 e0       	ldi	r25, 0x01	; 1
 2a0:	28 df       	rcall	.-432    	; 0xf2 <BUTTON_getState>
 2a2:	82 30       	cpi	r24, 0x02	; 2
 2a4:	c1 f4       	brne	.+48     	; 0x2d6 <Fan_Stage+0x3a>
	{
		//LCD_WriteCommand(COMMAND_DISPLAY_CLEAR);
		LED_PORT = 0x00;
 2a6:	1b ba       	out	0x1b, r1	; 27
		PORTF |= (1<<PINF4) | (1<<PINF5); // MOtor Break
 2a8:	e2 e6       	ldi	r30, 0x62	; 98
 2aa:	f0 e0       	ldi	r31, 0x00	; 0
 2ac:	80 81       	ld	r24, Z
 2ae:	80 63       	ori	r24, 0x30	; 48
 2b0:	80 83       	st	Z, r24
		LCD_WriteStringXY(0,0,"   Stop mode    ");
 2b2:	42 e2       	ldi	r20, 0x22	; 34
 2b4:	51 e0       	ldi	r21, 0x01	; 1
 2b6:	60 e0       	ldi	r22, 0x00	; 0
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	a0 d2       	rcall	.+1344   	; 0x7fc <LCD_WriteStringXY>
		LCD_WriteStringXY(1,0,"  Power :   0%  ");
 2bc:	43 e3       	ldi	r20, 0x33	; 51
 2be:	51 e0       	ldi	r21, 0x01	; 1
 2c0:	60 e0       	ldi	r22, 0x00	; 0
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	9b d2       	rcall	.+1334   	; 0x7fc <LCD_WriteStringXY>
		Fan_run_status = Fan_stop;
 2c6:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <Fan_run_status+0x1>
 2ca:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <Fan_run_status>
		spin_cnt = 0;
 2ce:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
 2d2:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
		//_delay_ms(3000);
		//Fan_Start_signal();
		//Fan_run_status = Fan_stop;		
	}
	if(BUTTON_getState(&btn_1stage) == ACT_RELEASED)
 2d6:	86 ec       	ldi	r24, 0xC6	; 198
 2d8:	91 e0       	ldi	r25, 0x01	; 1
 2da:	0b df       	rcall	.-490    	; 0xf2 <BUTTON_getState>
 2dc:	82 30       	cpi	r24, 0x02	; 2
 2de:	11 f5       	brne	.+68     	; 0x324 <Fan_Stage+0x88>
	{
		//LCD_WriteCommand(COMMAND_DISPLAY_CLEAR);
		// PORTF |= (1<<PINF4) | (1<<PINF5); // Pulse가 중첩되어 더 커지는 것을 방지하기 위한 MOtor Break
		// DDRB &= ~(1<<PINB4); // Pulse가 중첩되어 더 커지는 것을 방지하기 위한 MOtor Break
		LED_PORT = 0x00;
 2e0:	1b ba       	out	0x1b, r1	; 27
		LED_PORT |= (1<<PINA0);
 2e2:	8b b3       	in	r24, 0x1b	; 27
 2e4:	81 60       	ori	r24, 0x01	; 1
 2e6:	8b bb       	out	0x1b, r24	; 27
		DDRB |= (1<<PINB4);
 2e8:	87 b3       	in	r24, 0x17	; 23
 2ea:	80 61       	ori	r24, 0x10	; 16
 2ec:	87 bb       	out	0x17, r24	; 23
		OCR0 = 64; // 25%
 2ee:	80 e4       	ldi	r24, 0x40	; 64
 2f0:	81 bf       	out	0x31, r24	; 49
		PORTF &= ~(1<<PINF4); // Motor 정방향 회전
 2f2:	e2 e6       	ldi	r30, 0x62	; 98
 2f4:	f0 e0       	ldi	r31, 0x00	; 0
 2f6:	80 81       	ld	r24, Z
 2f8:	8f 7e       	andi	r24, 0xEF	; 239
 2fa:	80 83       	st	Z, r24
		PORTF |= (1<<PINF5);
 2fc:	80 81       	ld	r24, Z
 2fe:	80 62       	ori	r24, 0x20	; 32
 300:	80 83       	st	Z, r24
		LCD_WriteStringXY(0,0,"   1st Stage    ");
 302:	44 e4       	ldi	r20, 0x44	; 68
 304:	51 e0       	ldi	r21, 0x01	; 1
 306:	60 e0       	ldi	r22, 0x00	; 0
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	78 d2       	rcall	.+1264   	; 0x7fc <LCD_WriteStringXY>
		LCD_WriteStringXY(1,0,"  Power :  25%  ");
 30c:	45 e5       	ldi	r20, 0x55	; 85
 30e:	51 e0       	ldi	r21, 0x01	; 1
 310:	60 e0       	ldi	r22, 0x00	; 0
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	73 d2       	rcall	.+1254   	; 0x7fc <LCD_WriteStringXY>
		Spin_status_LED();
 316:	b8 df       	rcall	.-144    	; 0x288 <Spin_status_LED>
 318:	81 e0       	ldi	r24, 0x01	; 1
		Fan_run_status = Fan_1st;
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <Fan_run_status+0x1>
 320:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <Fan_run_status>

	}
	if(BUTTON_getState(&btn_2stage) == ACT_RELEASED)
 324:	8c ea       	ldi	r24, 0xAC	; 172
 326:	91 e0       	ldi	r25, 0x01	; 1
 328:	e4 de       	rcall	.-568    	; 0xf2 <BUTTON_getState>
 32a:	82 30       	cpi	r24, 0x02	; 2
 32c:	11 f5       	brne	.+68     	; 0x372 <Fan_Stage+0xd6>
 32e:	1b ba       	out	0x1b, r1	; 27
	{
		//LCD_WriteCommand(COMMAND_DISPLAY_CLEAR);
		// DDRB &= ~(1<<PINB4); // Pulse가 중첩되어 더 커지는 것을 방지하기 위한 MOtor Break
		LED_PORT = 0x00;
 330:	8b b3       	in	r24, 0x1b	; 27
		LED_PORT |= (1<<PINA0) | (1<<PINA1);
 332:	83 60       	ori	r24, 0x03	; 3
 334:	8b bb       	out	0x1b, r24	; 27
 336:	87 b3       	in	r24, 0x17	; 23
		DDRB |= (1<<PINB4);
 338:	80 61       	ori	r24, 0x10	; 16
 33a:	87 bb       	out	0x17, r24	; 23
 33c:	88 e7       	ldi	r24, 0x78	; 120
		OCR0 = 120; // 50%
 33e:	81 bf       	out	0x31, r24	; 49
 340:	e2 e6       	ldi	r30, 0x62	; 98
		PORTF &= ~(1<<PINF4); // Motor 정방향 회전
 342:	f0 e0       	ldi	r31, 0x00	; 0
 344:	80 81       	ld	r24, Z
 346:	8f 7e       	andi	r24, 0xEF	; 239
 348:	80 83       	st	Z, r24
		PORTF |= (1<<PINF5);
 34a:	80 81       	ld	r24, Z
 34c:	80 62       	ori	r24, 0x20	; 32
 34e:	80 83       	st	Z, r24
		LCD_WriteStringXY(0,0,"   2nd Stage    ");
 350:	46 e6       	ldi	r20, 0x66	; 102
 352:	51 e0       	ldi	r21, 0x01	; 1
 354:	60 e0       	ldi	r22, 0x00	; 0
 356:	80 e0       	ldi	r24, 0x00	; 0
		LCD_WriteStringXY(1,0,"  Power :  50%  ");
 358:	51 d2       	rcall	.+1186   	; 0x7fc <LCD_WriteStringXY>
 35a:	47 e7       	ldi	r20, 0x77	; 119
 35c:	51 e0       	ldi	r21, 0x01	; 1
 35e:	60 e0       	ldi	r22, 0x00	; 0
 360:	81 e0       	ldi	r24, 0x01	; 1
		Spin_status_LED();
 362:	4c d2       	rcall	.+1176   	; 0x7fc <LCD_WriteStringXY>
 364:	91 df       	rcall	.-222    	; 0x288 <Spin_status_LED>
		Fan_run_status = Fan_2nd;
 366:	82 e0       	ldi	r24, 0x02	; 2
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <Fan_run_status+0x1>
 36e:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <Fan_run_status>
	}
	if(BUTTON_getState(&btn_3stage) == ACT_RELEASED)
 372:	8a eb       	ldi	r24, 0xBA	; 186
 374:	91 e0       	ldi	r25, 0x01	; 1
 376:	bd de       	rcall	.-646    	; 0xf2 <BUTTON_getState>
 378:	82 30       	cpi	r24, 0x02	; 2
 37a:	11 f5       	brne	.+68     	; 0x3c0 <Fan_Stage+0x124>
 37c:	1b ba       	out	0x1b, r1	; 27
	{
		//LCD_WriteCommand(COMMAND_DISPLAY_CLEAR);
		// PORTF |= (1<<PINF4) | (1<<PINF5); // Pulse가 중첩되어 더 커지는 것을 방지하기 위한 MOtor Break
		// DDRB &= ~(1<<PINB4); // Pulse가 중첩되어 더 커지는 것을 방지하기 위한 MOtor Break
		LED_PORT = 0x00;
 37e:	8b b3       	in	r24, 0x1b	; 27
		LED_PORT |= (1<<PINA0) | (1<<PINA1) | (1<<PINA2);
 380:	87 60       	ori	r24, 0x07	; 7
 382:	8b bb       	out	0x1b, r24	; 27
 384:	87 b3       	in	r24, 0x17	; 23
		DDRB |= (1<<PINB4);
 386:	80 61       	ori	r24, 0x10	; 16
 388:	87 bb       	out	0x17, r24	; 23
 38a:	8f ef       	ldi	r24, 0xFF	; 255
		OCR0 = 255; // 100%
 38c:	81 bf       	out	0x31, r24	; 49
 38e:	e2 e6       	ldi	r30, 0x62	; 98
		PORTF &= ~(1<<PINF4); // Motor 정방향 회전
 390:	f0 e0       	ldi	r31, 0x00	; 0
 392:	80 81       	ld	r24, Z
 394:	8f 7e       	andi	r24, 0xEF	; 239
 396:	80 83       	st	Z, r24
		PORTF |= (1<<PINF5);
 398:	80 81       	ld	r24, Z
		LCD_WriteStringXY(0,0,"   3rd Stage    ");
 39a:	80 62       	ori	r24, 0x20	; 32
 39c:	80 83       	st	Z, r24
 39e:	48 e8       	ldi	r20, 0x88	; 136
 3a0:	51 e0       	ldi	r21, 0x01	; 1
 3a2:	60 e0       	ldi	r22, 0x00	; 0
 3a4:	80 e0       	ldi	r24, 0x00	; 0
		LCD_WriteStringXY(1,0,"  Power : 100%  ");
 3a6:	2a d2       	rcall	.+1108   	; 0x7fc <LCD_WriteStringXY>
 3a8:	49 e9       	ldi	r20, 0x99	; 153
 3aa:	51 e0       	ldi	r21, 0x01	; 1
 3ac:	60 e0       	ldi	r22, 0x00	; 0
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	25 d2       	rcall	.+1098   	; 0x7fc <LCD_WriteStringXY>
		Spin_status_LED();
 3b2:	6a df       	rcall	.-300    	; 0x288 <Spin_status_LED>
 3b4:	83 e0       	ldi	r24, 0x03	; 3
		Fan_run_status = Fan_3rd;
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <Fan_run_status+0x1>
 3bc:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <Fan_run_status>
 3c0:	08 95       	ret

000003c2 <Fan_continue_run>:
 3c2:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <Fan_run_status>
	}
}

void Fan_continue_run()
{
	switch (Fan_run_status)
 3c6:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <Fan_run_status+0x1>
 3ca:	81 30       	cpi	r24, 0x01	; 1
 3cc:	91 05       	cpc	r25, r1
 3ce:	51 f1       	breq	.+84     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 3d0:	1c f4       	brge	.+6      	; 0x3d8 <Fan_continue_run+0x16>
 3d2:	89 2b       	or	r24, r25
 3d4:	49 f0       	breq	.+18     	; 0x3e8 <Fan_continue_run+0x26>
 3d6:	08 95       	ret
 3d8:	82 30       	cpi	r24, 0x02	; 2
 3da:	91 05       	cpc	r25, r1
 3dc:	09 f4       	brne	.+2      	; 0x3e0 <Fan_continue_run+0x1e>
 3de:	46 c0       	rjmp	.+140    	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 3e0:	03 97       	sbiw	r24, 0x03	; 3
 3e2:	09 f4       	brne	.+2      	; 0x3e6 <Fan_continue_run+0x24>
 3e4:	67 c0       	rjmp	.+206    	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 3e6:	08 95       	ret
	{
		case 0:
			//LCD_WriteCommand(COMMAND_DISPLAY_CLEAR);
			LED_PORT = 0x00;
 3e8:	1b ba       	out	0x1b, r1	; 27
			PORTF |= (1<<PINF4) | (1<<PINF5); // MOtor Break
 3ea:	e2 e6       	ldi	r30, 0x62	; 98
 3ec:	f0 e0       	ldi	r31, 0x00	; 0
 3ee:	80 81       	ld	r24, Z
 3f0:	80 63       	ori	r24, 0x30	; 48
 3f2:	80 83       	st	Z, r24
			DDRB &= ~(1<<PINB4);
 3f4:	87 b3       	in	r24, 0x17	; 23
 3f6:	8f 7e       	andi	r24, 0xEF	; 239
 3f8:	87 bb       	out	0x17, r24	; 23
			LCD_WriteStringXY(0,0,"   Stop mode    ");
 3fa:	42 e2       	ldi	r20, 0x22	; 34
 3fc:	51 e0       	ldi	r21, 0x01	; 1
 3fe:	60 e0       	ldi	r22, 0x00	; 0
 400:	80 e0       	ldi	r24, 0x00	; 0
 402:	fc d1       	rcall	.+1016   	; 0x7fc <LCD_WriteStringXY>
			LCD_WriteStringXY(1,0,"  Power :   0%  ");
 404:	43 e3       	ldi	r20, 0x33	; 51
 406:	51 e0       	ldi	r21, 0x01	; 1
 408:	60 e0       	ldi	r22, 0x00	; 0
 40a:	81 e0       	ldi	r24, 0x01	; 1
 40c:	f7 d1       	rcall	.+1006   	; 0x7fc <LCD_WriteStringXY>
			Fan_run_status = Fan_stop;
 40e:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <Fan_run_status+0x1>
 412:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <Fan_run_status>
			spin_cnt = 0;
 416:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
 41a:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
			Spin_status_LED();
 41e:	34 df       	rcall	.-408    	; 0x288 <Spin_status_LED>
			Fan_Stage();
 420:	3d cf       	rjmp	.-390    	; 0x29c <Fan_Stage>
 422:	08 95       	ret
			break;
 424:	1b ba       	out	0x1b, r1	; 27
		
		case 1 :
			//LCD_WriteCommand(COMMAND_DISPLAY_CLEAR);
			LED_PORT = 0x00;
 426:	8b b3       	in	r24, 0x1b	; 27
			LED_PORT |= (1<<PINA0);
 428:	81 60       	ori	r24, 0x01	; 1
 42a:	8b bb       	out	0x1b, r24	; 27
 42c:	87 b3       	in	r24, 0x17	; 23
			DDRB |= (1<<PINB4);
 42e:	80 61       	ori	r24, 0x10	; 16
 430:	87 bb       	out	0x17, r24	; 23
 432:	80 e4       	ldi	r24, 0x40	; 64
			OCR0 = 64; // 25%
 434:	81 bf       	out	0x31, r24	; 49
 436:	e2 e6       	ldi	r30, 0x62	; 98
			PORTF &= ~(1<<PINF4); // Motor 정방향 회전
 438:	f0 e0       	ldi	r31, 0x00	; 0
 43a:	80 81       	ld	r24, Z
 43c:	8f 7e       	andi	r24, 0xEF	; 239
 43e:	80 83       	st	Z, r24
 440:	80 81       	ld	r24, Z
			PORTF |= (1<<PINF5);
 442:	80 62       	ori	r24, 0x20	; 32
 444:	80 83       	st	Z, r24
 446:	44 e4       	ldi	r20, 0x44	; 68
			LCD_WriteStringXY(0,0,"   1st Stage    ");
 448:	51 e0       	ldi	r21, 0x01	; 1
 44a:	60 e0       	ldi	r22, 0x00	; 0
 44c:	80 e0       	ldi	r24, 0x00	; 0
 44e:	d6 d1       	rcall	.+940    	; 0x7fc <LCD_WriteStringXY>
 450:	45 e5       	ldi	r20, 0x55	; 85
			LCD_WriteStringXY(1,0,"  Power :  25%  ");
 452:	51 e0       	ldi	r21, 0x01	; 1
 454:	60 e0       	ldi	r22, 0x00	; 0
 456:	81 e0       	ldi	r24, 0x01	; 1
 458:	d1 d1       	rcall	.+930    	; 0x7fc <LCD_WriteStringXY>
 45a:	81 e0       	ldi	r24, 0x01	; 1
 45c:	90 e0       	ldi	r25, 0x00	; 0
			Fan_run_status = Fan_1st;
 45e:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <Fan_run_status+0x1>
 462:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <Fan_run_status>
			Spin_status_LED();
 466:	10 df       	rcall	.-480    	; 0x288 <Spin_status_LED>
 468:	19 cf       	rjmp	.-462    	; 0x29c <Fan_Stage>
			Fan_Stage();
 46a:	08 95       	ret
 46c:	1b ba       	out	0x1b, r1	; 27
		break;
 46e:	8b b3       	in	r24, 0x1b	; 27
		
		case 2 :
			//LCD_WriteCommand(COMMAND_DISPLAY_CLEAR);
			LED_PORT = 0x00;
 470:	83 60       	ori	r24, 0x03	; 3
			LED_PORT |= (1<<PINA0) | (1<<PINA1);
 472:	8b bb       	out	0x1b, r24	; 27
 474:	87 b3       	in	r24, 0x17	; 23
 476:	80 61       	ori	r24, 0x10	; 16
			DDRB |= (1<<PINB4);
 478:	87 bb       	out	0x17, r24	; 23
 47a:	80 e8       	ldi	r24, 0x80	; 128
 47c:	81 bf       	out	0x31, r24	; 49
			OCR0 = 128; // 50%
 47e:	e2 e6       	ldi	r30, 0x62	; 98
 480:	f0 e0       	ldi	r31, 0x00	; 0
			PORTF &= ~(1<<PINF4); // Motor 정방향 회전
 482:	80 81       	ld	r24, Z
 484:	8f 7e       	andi	r24, 0xEF	; 239
 486:	80 83       	st	Z, r24
 488:	80 81       	ld	r24, Z
			PORTF |= (1<<PINF5);
 48a:	80 62       	ori	r24, 0x20	; 32
 48c:	80 83       	st	Z, r24
 48e:	46 e6       	ldi	r20, 0x66	; 102
			LCD_WriteStringXY(0,0,"   2nd Stage    ");
 490:	51 e0       	ldi	r21, 0x01	; 1
 492:	60 e0       	ldi	r22, 0x00	; 0
 494:	80 e0       	ldi	r24, 0x00	; 0
 496:	b2 d1       	rcall	.+868    	; 0x7fc <LCD_WriteStringXY>
 498:	47 e7       	ldi	r20, 0x77	; 119
			LCD_WriteStringXY(1,0,"  Power :  50%  ");
 49a:	51 e0       	ldi	r21, 0x01	; 1
 49c:	60 e0       	ldi	r22, 0x00	; 0
 49e:	81 e0       	ldi	r24, 0x01	; 1
 4a0:	ad d1       	rcall	.+858    	; 0x7fc <LCD_WriteStringXY>
			Fan_run_status = Fan_2nd;
 4a2:	82 e0       	ldi	r24, 0x02	; 2
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <Fan_run_status+0x1>
 4aa:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <Fan_run_status>
			Spin_status_LED();
 4ae:	ec de       	rcall	.-552    	; 0x288 <Spin_status_LED>
 4b0:	f5 ce       	rjmp	.-534    	; 0x29c <Fan_Stage>
			Fan_Stage();
 4b2:	08 95       	ret
 4b4:	1b ba       	out	0x1b, r1	; 27
		break;
 4b6:	8b b3       	in	r24, 0x1b	; 27
		
		case 3 :
			//LCD_WriteCommand(COMMAND_DISPLAY_CLEAR);
			LED_PORT = 0x00;
 4b8:	87 60       	ori	r24, 0x07	; 7
			LED_PORT |= (1<<PINA0) | (1<<PINA1) | (1<<PINA2);
 4ba:	8b bb       	out	0x1b, r24	; 27
 4bc:	87 b3       	in	r24, 0x17	; 23
 4be:	80 61       	ori	r24, 0x10	; 16
			DDRB |= (1<<PINB4);
 4c0:	87 bb       	out	0x17, r24	; 23
 4c2:	8f ef       	ldi	r24, 0xFF	; 255
 4c4:	81 bf       	out	0x31, r24	; 49
			OCR0 = 255; // 100%
 4c6:	e2 e6       	ldi	r30, 0x62	; 98
 4c8:	f0 e0       	ldi	r31, 0x00	; 0
			PORTF &= ~(1<<PINF4); // Motor 정방향 회전
 4ca:	80 81       	ld	r24, Z
 4cc:	8f 7e       	andi	r24, 0xEF	; 239
 4ce:	80 83       	st	Z, r24
 4d0:	80 81       	ld	r24, Z
			PORTF |= (1<<PINF5);
 4d2:	80 62       	ori	r24, 0x20	; 32
 4d4:	80 83       	st	Z, r24
			LCD_WriteStringXY(0,0,"   3rd Stage    ");
 4d6:	48 e8       	ldi	r20, 0x88	; 136
 4d8:	51 e0       	ldi	r21, 0x01	; 1
 4da:	60 e0       	ldi	r22, 0x00	; 0
 4dc:	80 e0       	ldi	r24, 0x00	; 0
 4de:	8e d1       	rcall	.+796    	; 0x7fc <LCD_WriteStringXY>
			LCD_WriteStringXY(1,0,"  Power : 100%  ");
 4e0:	49 e9       	ldi	r20, 0x99	; 153
 4e2:	51 e0       	ldi	r21, 0x01	; 1
 4e4:	60 e0       	ldi	r22, 0x00	; 0
 4e6:	81 e0       	ldi	r24, 0x01	; 1
 4e8:	89 d1       	rcall	.+786    	; 0x7fc <LCD_WriteStringXY>
 4ea:	83 e0       	ldi	r24, 0x03	; 3
			Fan_run_status = Fan_3rd;
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <Fan_run_status+0x1>
 4f2:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <Fan_run_status>
 4f6:	c8 de       	rcall	.-624    	; 0x288 <Spin_status_LED>
			Spin_status_LED();
 4f8:	d1 ce       	rjmp	.-606    	; 0x29c <Fan_Stage>
 4fa:	08 95       	ret

000004fc <Display_LCD>:
			Fan_Stage();
 4fc:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <Fan_run_status>
 500:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <Fan_run_status+0x1>
	}
}

void Display_LCD()
{
	switch (Fan_run_status)
 504:	81 30       	cpi	r24, 0x01	; 1
 506:	91 05       	cpc	r25, r1
 508:	d9 f0       	breq	.+54     	; 0x540 <Display_LCD+0x44>
 50a:	1c f4       	brge	.+6      	; 0x512 <Display_LCD+0x16>
 50c:	89 2b       	or	r24, r25
 50e:	41 f0       	breq	.+16     	; 0x520 <Display_LCD+0x24>
 510:	08 95       	ret
 512:	82 30       	cpi	r24, 0x02	; 2
 514:	91 05       	cpc	r25, r1
 516:	39 f1       	breq	.+78     	; 0x566 <Display_LCD+0x6a>
 518:	03 97       	sbiw	r24, 0x03	; 3
 51a:	09 f4       	brne	.+2      	; 0x51e <Display_LCD+0x22>
 51c:	37 c0       	rjmp	.+110    	; 0x58c <Display_LCD+0x90>
 51e:	08 95       	ret
	{
		case 0:
		//LCD_WriteCommand(COMMAND_DISPLAY_CLEAR);
		LCD_WriteStringXY(0,0,"   Stop mode    ");
 520:	42 e2       	ldi	r20, 0x22	; 34
 522:	51 e0       	ldi	r21, 0x01	; 1
 524:	60 e0       	ldi	r22, 0x00	; 0
 526:	80 e0       	ldi	r24, 0x00	; 0
 528:	69 d1       	rcall	.+722    	; 0x7fc <LCD_WriteStringXY>
		LCD_WriteStringXY(1,0,"  Power :   0%  ");
 52a:	43 e3       	ldi	r20, 0x33	; 51
 52c:	51 e0       	ldi	r21, 0x01	; 1
 52e:	60 e0       	ldi	r22, 0x00	; 0
 530:	81 e0       	ldi	r24, 0x01	; 1
 532:	64 d1       	rcall	.+712    	; 0x7fc <LCD_WriteStringXY>
		//Spin_status_LED();
		Fan_run_status = Fan_stop;
 534:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <Fan_run_status+0x1>
 538:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <Fan_run_status>
		Fan_Stage();
 53c:	af ce       	rjmp	.-674    	; 0x29c <Fan_Stage>
		break;
 53e:	08 95       	ret
		
		case 1 :
		//LCD_WriteCommand(COMMAND_DISPLAY_CLEAR);
		LCD_WriteStringXY(0,0,"   1st Stage    ");
 540:	44 e4       	ldi	r20, 0x44	; 68
 542:	51 e0       	ldi	r21, 0x01	; 1
 544:	60 e0       	ldi	r22, 0x00	; 0
 546:	80 e0       	ldi	r24, 0x00	; 0
 548:	59 d1       	rcall	.+690    	; 0x7fc <LCD_WriteStringXY>
		LCD_WriteStringXY(1,0,"  Power :  25%  ");
 54a:	45 e5       	ldi	r20, 0x55	; 85
 54c:	51 e0       	ldi	r21, 0x01	; 1
 54e:	60 e0       	ldi	r22, 0x00	; 0
 550:	81 e0       	ldi	r24, 0x01	; 1
 552:	54 d1       	rcall	.+680    	; 0x7fc <LCD_WriteStringXY>
		//Spin_status_LED();
		Fan_run_status = Fan_1st;
 554:	81 e0       	ldi	r24, 0x01	; 1
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <Fan_run_status+0x1>
		Fan_Stage();
 55c:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <Fan_run_status>
		Fan_continue_run();
 560:	9d de       	rcall	.-710    	; 0x29c <Fan_Stage>
		break;
 562:	2f cf       	rjmp	.-418    	; 0x3c2 <Fan_continue_run>
		
		case 2 :
		//LCD_WriteCommand(COMMAND_DISPLAY_CLEAR);
		LCD_WriteStringXY(0,0,"   2nd Stage    ");
 564:	08 95       	ret
 566:	46 e6       	ldi	r20, 0x66	; 102
 568:	51 e0       	ldi	r21, 0x01	; 1
 56a:	60 e0       	ldi	r22, 0x00	; 0
 56c:	80 e0       	ldi	r24, 0x00	; 0
		LCD_WriteStringXY(1,0,"  Power :  50%  ");
 56e:	46 d1       	rcall	.+652    	; 0x7fc <LCD_WriteStringXY>
 570:	47 e7       	ldi	r20, 0x77	; 119
 572:	51 e0       	ldi	r21, 0x01	; 1
 574:	60 e0       	ldi	r22, 0x00	; 0
		//Spin_status_LED();
		Fan_run_status = Fan_2nd;
 576:	81 e0       	ldi	r24, 0x01	; 1
 578:	41 d1       	rcall	.+642    	; 0x7fc <LCD_WriteStringXY>
 57a:	82 e0       	ldi	r24, 0x02	; 2
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <Fan_run_status+0x1>
		Fan_Stage();
 582:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <Fan_run_status>
		Fan_continue_run();
		break;
 586:	8a de       	rcall	.-748    	; 0x29c <Fan_Stage>
		
		case 3 :
		//LCD_WriteCommand(COMMAND_DISPLAY_CLEAR);
		LCD_WriteStringXY(0,0,"   3rd Stage    ");
 588:	1c cf       	rjmp	.-456    	; 0x3c2 <Fan_continue_run>
 58a:	08 95       	ret
 58c:	48 e8       	ldi	r20, 0x88	; 136
 58e:	51 e0       	ldi	r21, 0x01	; 1
 590:	60 e0       	ldi	r22, 0x00	; 0
		LCD_WriteStringXY(1,0,"  Power : 100%  ");
 592:	80 e0       	ldi	r24, 0x00	; 0
 594:	33 d1       	rcall	.+614    	; 0x7fc <LCD_WriteStringXY>
 596:	49 e9       	ldi	r20, 0x99	; 153
 598:	51 e0       	ldi	r21, 0x01	; 1
 59a:	60 e0       	ldi	r22, 0x00	; 0
		//Spin_status_LED();
		Fan_run_status = Fan_3rd;
 59c:	81 e0       	ldi	r24, 0x01	; 1
 59e:	2e d1       	rcall	.+604    	; 0x7fc <LCD_WriteStringXY>
 5a0:	83 e0       	ldi	r24, 0x03	; 3
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <Fan_run_status+0x1>
		Fan_Stage();
 5a8:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <Fan_run_status>
		Fan_continue_run();
 5ac:	77 de       	rcall	.-786    	; 0x29c <Fan_Stage>
 5ae:	09 cf       	rjmp	.-494    	; 0x3c2 <Fan_continue_run>
 5b0:	08 95       	ret

000005b2 <Spin_stop>:
	// else LED_PORT &= ~(1<<PINA3);
}

void Spin_stop()
{
	LED_PORT &= ~(1<<PINA3);
 5b2:	8b b3       	in	r24, 0x1b	; 27
 5b4:	87 7f       	andi	r24, 0xF7	; 247
 5b6:	8b bb       	out	0x1b, r24	; 27
	TCCR1A &= ~((1<<COM1A1) | (1<<COM1A0)); // PWM 출력 안 되도록
 5b8:	8f b5       	in	r24, 0x2f	; 47
 5ba:	8f 73       	andi	r24, 0x3F	; 63
 5bc:	8f bd       	out	0x2f, r24	; 47
 5be:	08 95       	ret

000005c0 <Spin_start>:
}

void Spin_start(uint8_t degree)
{
	// 0도 : 125 / 180도 : 625
	LED_PORT |= (1<<PINA3);
 5c0:	9b b3       	in	r25, 0x1b	; 27
 5c2:	98 60       	ori	r25, 0x08	; 8
 5c4:	9b bb       	out	0x1b, r25	; 27
	uint16_t degree_value;
	TCCR1A |= (1<<COM1A1); // PWM 다시 출력되도록
 5c6:	9f b5       	in	r25, 0x2f	; 47
 5c8:	90 68       	ori	r25, 0x80	; 128
 5ca:	9f bd       	out	0x2f, r25	; 47
	if (degree_value < 0) // 제한 범위를 벗어나 고장나지 않도록 설정
	{
		degree = 0;
	}
	else if(degree > 180)
 5cc:	85 3b       	cpi	r24, 0xB5	; 181
 5ce:	08 f0       	brcs	.+2      	; 0x5d2 <Spin_start+0x12>
	{
		degree = 180;
 5d0:	84 eb       	ldi	r24, 0xB4	; 180
	}
	degree_value = (uint16_t)((degree/180.0)*500 + 125); // 우리가 흔히 쓰는 각도로 표현하기 위한 식
 5d2:	68 2f       	mov	r22, r24
 5d4:	70 e0       	ldi	r23, 0x00	; 0
 5d6:	80 e0       	ldi	r24, 0x00	; 0
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	44 d2       	rcall	.+1160   	; 0xa64 <__floatsisf>
 5dc:	20 e0       	ldi	r18, 0x00	; 0
 5de:	30 e0       	ldi	r19, 0x00	; 0
 5e0:	44 e3       	ldi	r20, 0x34	; 52
 5e2:	53 e4       	ldi	r21, 0x43	; 67
 5e4:	a9 d1       	rcall	.+850    	; 0x938 <__divsf3>
 5e6:	20 e0       	ldi	r18, 0x00	; 0
 5e8:	30 e0       	ldi	r19, 0x00	; 0
 5ea:	4a ef       	ldi	r20, 0xFA	; 250
 5ec:	53 e4       	ldi	r21, 0x43	; 67
 5ee:	c6 d2       	rcall	.+1420   	; 0xb7c <__mulsf3>
 5f0:	20 e0       	ldi	r18, 0x00	; 0
 5f2:	30 e0       	ldi	r19, 0x00	; 0
 5f4:	4a ef       	ldi	r20, 0xFA	; 250
 5f6:	52 e4       	ldi	r21, 0x42	; 66
 5f8:	3b d1       	rcall	.+630    	; 0x870 <__addsf3>
 5fa:	06 d2       	rcall	.+1036   	; 0xa08 <__fixunssfsi>
	OCR1A = degree_value;
 5fc:	7b bd       	out	0x2b, r23	; 43
 5fe:	6a bd       	out	0x2a, r22	; 42
 600:	08 95       	ret

00000602 <Head_spin_op>:
		//break;
	}
}

void Head_spin_op()
{
 602:	cf 93       	push	r28
 604:	df 93       	push	r29
	BUTTON_spin_getState(&btn_spin);
 606:	84 eb       	ldi	r24, 0xB4	; 180
 608:	91 e0       	ldi	r25, 0x01	; 1
 60a:	9f dd       	rcall	.-1218   	; 0x14a <BUTTON_spin_getState>
	switch (spin_cnt)
 60c:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 610:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 614:	01 97       	sbiw	r24, 0x01	; 1
 616:	09 f0       	breq	.+2      	; 0x61a <Head_spin_op+0x18>
	{
		case 1:
		//Spin_status_LED();
		Fan_continue_run();
 618:	53 c0       	rjmp	.+166    	; 0x6c0 <Head_spin_op+0xbe>
		Display_LCD();
 61a:	d3 de       	rcall	.-602    	; 0x3c2 <Fan_continue_run>
 61c:	6f df       	rcall	.-290    	; 0x4fc <Display_LCD>
		DDRB = (1<<PINB5);
 61e:	80 e2       	ldi	r24, 0x20	; 32
		BUTTON_spin_getState(&btn_spin);
 620:	87 bb       	out	0x17, r24	; 23
 622:	84 eb       	ldi	r24, 0xB4	; 180
 624:	91 e0       	ldi	r25, 0x01	; 1
 626:	91 dd       	rcall	.-1246   	; 0x14a <BUTTON_spin_getState>
		LED_PORT |= (1<<PINA3);
 628:	8b b3       	in	r24, 0x1b	; 27
 62a:	88 60       	ori	r24, 0x08	; 8
		while((spin_cnt == 1))
 62c:	8b bb       	out	0x1b, r24	; 27
		{
			Spin_status_LED();
 62e:	40 c0       	rjmp	.+128    	; 0x6b0 <Head_spin_op+0xae>
 630:	2b de       	rcall	.-938    	; 0x288 <Spin_status_LED>
			for (int i = 0; i < 90 ; i++)
 632:	c0 e0       	ldi	r28, 0x00	; 0
 634:	d0 e0       	ldi	r29, 0x00	; 0
 636:	1a c0       	rjmp	.+52     	; 0x66c <Head_spin_op+0x6a>
			{
				LED_PORT |= (1<<PINA3);
 638:	8b b3       	in	r24, 0x1b	; 27
				BUTTON_spin_getState(&btn_spin);
 63a:	88 60       	ori	r24, 0x08	; 8
 63c:	8b bb       	out	0x1b, r24	; 27
 63e:	84 eb       	ldi	r24, 0xB4	; 180
				Fan_continue_run();
 640:	91 e0       	ldi	r25, 0x01	; 1
 642:	83 dd       	rcall	.-1274   	; 0x14a <BUTTON_spin_getState>
				Display_LCD();
 644:	be de       	rcall	.-644    	; 0x3c2 <Fan_continue_run>
 646:	5a df       	rcall	.-332    	; 0x4fc <Display_LCD>
				Spin_start(2*i);
 648:	8c 2f       	mov	r24, r28
 64a:	88 0f       	add	r24, r24
 64c:	b9 df       	rcall	.-142    	; 0x5c0 <Spin_start>
				//_delay_ms(5);
				if (spin_cnt != 1)
 64e:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 652:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 656:	01 97       	sbiw	r24, 0x01	; 1
 658:	41 f0       	breq	.+16     	; 0x66a <Head_spin_op+0x68>
				{
					Display_LCD();
 65a:	50 df       	rcall	.-352    	; 0x4fc <Display_LCD>
 65c:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
					spin_cnt = 0;
 660:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
 664:	c0 e0       	ldi	r28, 0x00	; 0
		BUTTON_spin_getState(&btn_spin);
		LED_PORT |= (1<<PINA3);
		while((spin_cnt == 1))
		{
			Spin_status_LED();
			for (int i = 0; i < 90 ; i++)
 666:	d0 e0       	ldi	r29, 0x00	; 0
 668:	20 c0       	rjmp	.+64     	; 0x6aa <Head_spin_op+0xa8>
 66a:	21 96       	adiw	r28, 0x01	; 1
 66c:	ca 35       	cpi	r28, 0x5A	; 90
 66e:	d1 05       	cpc	r29, r1
				}
			}
			for (int j = 0; j < 90 ; j++)
			{
				//Spin_status_LED();
				LED_PORT |= (1<<PINA3);
 670:	1c f3       	brlt	.-58     	; 0x638 <Head_spin_op+0x36>
 672:	f8 cf       	rjmp	.-16     	; 0x664 <Head_spin_op+0x62>
 674:	8b b3       	in	r24, 0x1b	; 27
				BUTTON_spin_getState(&btn_spin);
 676:	88 60       	ori	r24, 0x08	; 8
 678:	8b bb       	out	0x1b, r24	; 27
 67a:	84 eb       	ldi	r24, 0xB4	; 180
				Fan_continue_run();
 67c:	91 e0       	ldi	r25, 0x01	; 1
 67e:	65 dd       	rcall	.-1334   	; 0x14a <BUTTON_spin_getState>
				Display_LCD();
 680:	a0 de       	rcall	.-704    	; 0x3c2 <Fan_continue_run>
				Spin_start(180-2*j);
 682:	3c df       	rcall	.-392    	; 0x4fc <Display_LCD>
 684:	8a e5       	ldi	r24, 0x5A	; 90
 686:	90 e0       	ldi	r25, 0x00	; 0
 688:	8c 1b       	sub	r24, r28
 68a:	9d 0b       	sbc	r25, r29
 68c:	88 0f       	add	r24, r24
 68e:	98 df       	rcall	.-208    	; 0x5c0 <Spin_start>
				//_delay_ms(5);
				if (spin_cnt != 1)
 690:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 694:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 698:	01 97       	sbiw	r24, 0x01	; 1
 69a:	31 f0       	breq	.+12     	; 0x6a8 <Head_spin_op+0xa6>
				{
					Display_LCD();
 69c:	2f df       	rcall	.-418    	; 0x4fc <Display_LCD>
 69e:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
					spin_cnt = 0;
 6a2:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
 6a6:	04 c0       	rjmp	.+8      	; 0x6b0 <Head_spin_op+0xae>
					Display_LCD();
					spin_cnt = 0;
					break;
				}
			}
			for (int j = 0; j < 90 ; j++)
 6a8:	21 96       	adiw	r28, 0x01	; 1
		Fan_continue_run();
		Display_LCD();
		DDRB = (1<<PINB5);
		BUTTON_spin_getState(&btn_spin);
		LED_PORT |= (1<<PINA3);
		while((spin_cnt == 1))
 6aa:	ca 35       	cpi	r28, 0x5A	; 90
 6ac:	d1 05       	cpc	r29, r1
 6ae:	14 f3       	brlt	.-60     	; 0x674 <Head_spin_op+0x72>
 6b0:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
 6b4:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x1>
 6b8:	01 97       	sbiw	r24, 0x01	; 1
			}
		}
		break;
	
		default:
		BUTTON_spin_getState(&btn_spin);
 6ba:	09 f4       	brne	.+2      	; 0x6be <Head_spin_op+0xbc>
 6bc:	b9 cf       	rjmp	.-142    	; 0x630 <Head_spin_op+0x2e>
 6be:	0a c0       	rjmp	.+20     	; 0x6d4 <Head_spin_op+0xd2>
 6c0:	84 eb       	ldi	r24, 0xB4	; 180
		Fan_continue_run();
 6c2:	91 e0       	ldi	r25, 0x01	; 1
 6c4:	42 dd       	rcall	.-1404   	; 0x14a <BUTTON_spin_getState>
		Display_LCD();
 6c6:	7d de       	rcall	.-774    	; 0x3c2 <Fan_continue_run>
 6c8:	19 df       	rcall	.-462    	; 0x4fc <Display_LCD>
		Spin_stop();
 6ca:	73 df       	rcall	.-282    	; 0x5b2 <Spin_stop>
 6cc:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__data_end+0x1>
		spin_cnt = 0;
 6d0:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__data_end>
 6d4:	df 91       	pop	r29
		break;
	}
}
 6d6:	cf 91       	pop	r28
 6d8:	08 95       	ret

000006da <I2C_Init>:
 6da:	81 b3       	in	r24, 0x11	; 17
 6dc:	83 60       	ori	r24, 0x03	; 3
 6de:	81 bb       	out	0x11, r24	; 17
 6e0:	88 e4       	ldi	r24, 0x48	; 72
 6e2:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 6e6:	08 95       	ret

000006e8 <I2C_Start>:
 6e8:	84 ea       	ldi	r24, 0xA4	; 164
 6ea:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 6ee:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 6f2:	88 23       	and	r24, r24
 6f4:	e4 f7       	brge	.-8      	; 0x6ee <I2C_Start+0x6>
 6f6:	08 95       	ret

000006f8 <I2C_Stop>:
 6f8:	84 e9       	ldi	r24, 0x94	; 148
 6fa:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 6fe:	08 95       	ret

00000700 <I2C_TxData>:
 700:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 704:	84 e8       	ldi	r24, 0x84	; 132
 706:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 70a:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 70e:	88 23       	and	r24, r24
 710:	e4 f7       	brge	.-8      	; 0x70a <I2C_TxData+0xa>
 712:	08 95       	ret

00000714 <I2C_TxByte>:
 714:	cf 93       	push	r28
 716:	df 93       	push	r29
 718:	d8 2f       	mov	r29, r24
 71a:	c6 2f       	mov	r28, r22
 71c:	e5 df       	rcall	.-54     	; 0x6e8 <I2C_Start>
 71e:	8d 2f       	mov	r24, r29
 720:	ef df       	rcall	.-34     	; 0x700 <I2C_TxData>
 722:	8c 2f       	mov	r24, r28
 724:	ed df       	rcall	.-38     	; 0x700 <I2C_TxData>
 726:	e8 df       	rcall	.-48     	; 0x6f8 <I2C_Stop>
 728:	df 91       	pop	r29
 72a:	cf 91       	pop	r28
 72c:	08 95       	ret

0000072e <LCD_EnablePin>:
 72e:	60 91 cc 01 	lds	r22, 0x01CC	; 0x8001cc <I2C_LCD_Data>
 732:	6b 7f       	andi	r22, 0xFB	; 251
 734:	60 93 cc 01 	sts	0x01CC, r22	; 0x8001cc <I2C_LCD_Data>
 738:	8e e4       	ldi	r24, 0x4E	; 78
 73a:	ec df       	rcall	.-40     	; 0x714 <I2C_TxByte>
 73c:	60 91 cc 01 	lds	r22, 0x01CC	; 0x8001cc <I2C_LCD_Data>
 740:	64 60       	ori	r22, 0x04	; 4
 742:	60 93 cc 01 	sts	0x01CC, r22	; 0x8001cc <I2C_LCD_Data>
 746:	8e e4       	ldi	r24, 0x4E	; 78
 748:	e5 df       	rcall	.-54     	; 0x714 <I2C_TxByte>
 74a:	60 91 cc 01 	lds	r22, 0x01CC	; 0x8001cc <I2C_LCD_Data>
 74e:	6b 7f       	andi	r22, 0xFB	; 251
 750:	60 93 cc 01 	sts	0x01CC, r22	; 0x8001cc <I2C_LCD_Data>
 754:	8e e4       	ldi	r24, 0x4E	; 78
 756:	de df       	rcall	.-68     	; 0x714 <I2C_TxByte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 758:	8f ef       	ldi	r24, 0xFF	; 255
 75a:	98 e1       	ldi	r25, 0x18	; 24
 75c:	01 97       	sbiw	r24, 0x01	; 1
 75e:	f1 f7       	brne	.-4      	; 0x75c <LCD_EnablePin+0x2e>
 760:	00 c0       	rjmp	.+0      	; 0x762 <LCD_EnablePin+0x34>
 762:	00 00       	nop
 764:	08 95       	ret

00000766 <LCD_Data4bit>:
 766:	cf 93       	push	r28
 768:	c8 2f       	mov	r28, r24
 76a:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <I2C_LCD_Data>
 76e:	8f 70       	andi	r24, 0x0F	; 15
 770:	9c 2f       	mov	r25, r28
 772:	90 7f       	andi	r25, 0xF0	; 240
 774:	89 2b       	or	r24, r25
 776:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <I2C_LCD_Data>
 77a:	d9 df       	rcall	.-78     	; 0x72e <LCD_EnablePin>
 77c:	20 e1       	ldi	r18, 0x10	; 16
 77e:	c2 9f       	mul	r28, r18
 780:	c0 01       	movw	r24, r0
 782:	11 24       	eor	r1, r1
 784:	90 91 cc 01 	lds	r25, 0x01CC	; 0x8001cc <I2C_LCD_Data>
 788:	9f 70       	andi	r25, 0x0F	; 15
 78a:	89 2b       	or	r24, r25
 78c:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <I2C_LCD_Data>
 790:	ce df       	rcall	.-100    	; 0x72e <LCD_EnablePin>
 792:	cf 91       	pop	r28
 794:	08 95       	ret

00000796 <LCD_WriteCommand>:
 796:	90 91 cc 01 	lds	r25, 0x01CC	; 0x8001cc <I2C_LCD_Data>
 79a:	9c 7f       	andi	r25, 0xFC	; 252
 79c:	90 93 cc 01 	sts	0x01CC, r25	; 0x8001cc <I2C_LCD_Data>
 7a0:	e2 cf       	rjmp	.-60     	; 0x766 <LCD_Data4bit>
 7a2:	08 95       	ret

000007a4 <LCD_WriteData>:
 7a4:	90 91 cc 01 	lds	r25, 0x01CC	; 0x8001cc <I2C_LCD_Data>
 7a8:	91 60       	ori	r25, 0x01	; 1
 7aa:	9d 7f       	andi	r25, 0xFD	; 253
 7ac:	90 93 cc 01 	sts	0x01CC, r25	; 0x8001cc <I2C_LCD_Data>
 7b0:	da cf       	rjmp	.-76     	; 0x766 <LCD_Data4bit>
 7b2:	08 95       	ret

000007b4 <LCD_BackLight>:
 7b4:	60 91 cc 01 	lds	r22, 0x01CC	; 0x8001cc <I2C_LCD_Data>
 7b8:	68 60       	ori	r22, 0x08	; 8
 7ba:	60 93 cc 01 	sts	0x01CC, r22	; 0x8001cc <I2C_LCD_Data>
 7be:	8e e4       	ldi	r24, 0x4E	; 78
 7c0:	a9 cf       	rjmp	.-174    	; 0x714 <I2C_TxByte>
 7c2:	08 95       	ret

000007c4 <LCD_gotoXY>:
 7c4:	6f 70       	andi	r22, 0x0F	; 15
 7c6:	81 70       	andi	r24, 0x01	; 1
 7c8:	90 e4       	ldi	r25, 0x40	; 64
 7ca:	89 9f       	mul	r24, r25
 7cc:	60 0d       	add	r22, r0
 7ce:	11 24       	eor	r1, r1
 7d0:	86 2f       	mov	r24, r22
 7d2:	80 58       	subi	r24, 0x80	; 128
 7d4:	e0 cf       	rjmp	.-64     	; 0x796 <LCD_WriteCommand>
 7d6:	08 95       	ret

000007d8 <LCD_WriteString>:
 7d8:	0f 93       	push	r16
 7da:	1f 93       	push	r17
 7dc:	cf 93       	push	r28
 7de:	8c 01       	movw	r16, r24
 7e0:	c0 e0       	ldi	r28, 0x00	; 0
 7e2:	02 c0       	rjmp	.+4      	; 0x7e8 <LCD_WriteString+0x10>
 7e4:	df df       	rcall	.-66     	; 0x7a4 <LCD_WriteData>
 7e6:	cf 5f       	subi	r28, 0xFF	; 255
 7e8:	f8 01       	movw	r30, r16
 7ea:	ec 0f       	add	r30, r28
 7ec:	f1 1d       	adc	r31, r1
 7ee:	80 81       	ld	r24, Z
 7f0:	81 11       	cpse	r24, r1
 7f2:	f8 cf       	rjmp	.-16     	; 0x7e4 <LCD_WriteString+0xc>
 7f4:	cf 91       	pop	r28
 7f6:	1f 91       	pop	r17
 7f8:	0f 91       	pop	r16
 7fa:	08 95       	ret

000007fc <LCD_WriteStringXY>:
 7fc:	cf 93       	push	r28
 7fe:	df 93       	push	r29
 800:	ea 01       	movw	r28, r20
 802:	e0 df       	rcall	.-64     	; 0x7c4 <LCD_gotoXY>
 804:	ce 01       	movw	r24, r28
 806:	e8 df       	rcall	.-48     	; 0x7d8 <LCD_WriteString>
 808:	df 91       	pop	r29
 80a:	cf 91       	pop	r28
 80c:	08 95       	ret

0000080e <LCD_Init>:
 80e:	65 df       	rcall	.-310    	; 0x6da <I2C_Init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 810:	2f ef       	ldi	r18, 0xFF	; 255
 812:	89 ef       	ldi	r24, 0xF9	; 249
 814:	90 e0       	ldi	r25, 0x00	; 0
 816:	21 50       	subi	r18, 0x01	; 1
 818:	80 40       	sbci	r24, 0x00	; 0
 81a:	90 40       	sbci	r25, 0x00	; 0
 81c:	e1 f7       	brne	.-8      	; 0x816 <LCD_Init+0x8>
 81e:	00 c0       	rjmp	.+0      	; 0x820 <LCD_Init+0x12>
 820:	00 00       	nop
 822:	83 e0       	ldi	r24, 0x03	; 3
 824:	b8 df       	rcall	.-144    	; 0x796 <LCD_WriteCommand>
 826:	8f e3       	ldi	r24, 0x3F	; 63
 828:	9c e9       	ldi	r25, 0x9C	; 156
 82a:	01 97       	sbiw	r24, 0x01	; 1
 82c:	f1 f7       	brne	.-4      	; 0x82a <LCD_Init+0x1c>
 82e:	00 c0       	rjmp	.+0      	; 0x830 <LCD_Init+0x22>
 830:	00 00       	nop
 832:	83 e0       	ldi	r24, 0x03	; 3
 834:	b0 df       	rcall	.-160    	; 0x796 <LCD_WriteCommand>
 836:	8f e9       	ldi	r24, 0x9F	; 159
 838:	9f e0       	ldi	r25, 0x0F	; 15
 83a:	01 97       	sbiw	r24, 0x01	; 1
 83c:	f1 f7       	brne	.-4      	; 0x83a <LCD_Init+0x2c>
 83e:	00 c0       	rjmp	.+0      	; 0x840 <LCD_Init+0x32>
 840:	00 00       	nop
 842:	83 e0       	ldi	r24, 0x03	; 3
 844:	a8 df       	rcall	.-176    	; 0x796 <LCD_WriteCommand>
 846:	82 e0       	ldi	r24, 0x02	; 2
 848:	a6 df       	rcall	.-180    	; 0x796 <LCD_WriteCommand>
 84a:	88 e2       	ldi	r24, 0x28	; 40
 84c:	a4 df       	rcall	.-184    	; 0x796 <LCD_WriteCommand>
 84e:	88 e0       	ldi	r24, 0x08	; 8
 850:	a2 df       	rcall	.-188    	; 0x796 <LCD_WriteCommand>
 852:	81 e0       	ldi	r24, 0x01	; 1
 854:	a0 df       	rcall	.-192    	; 0x796 <LCD_WriteCommand>
 856:	86 e0       	ldi	r24, 0x06	; 6
 858:	9e df       	rcall	.-196    	; 0x796 <LCD_WriteCommand>
 85a:	8c e0       	ldi	r24, 0x0C	; 12
 85c:	9c df       	rcall	.-200    	; 0x796 <LCD_WriteCommand>
 85e:	aa cf       	rjmp	.-172    	; 0x7b4 <LCD_BackLight>
 860:	08 95       	ret

00000862 <main>:
//}


int main(void)
{
	Fan_Init();
 862:	a7 dc       	rcall	.-1714   	; 0x1b2 <Fan_Init>
	Fan_Start_signal();
 864:	f5 dc       	rcall	.-1558   	; 0x250 <Fan_Start_signal>
	
	while (1)
	{
		Fan_Stage();
 866:	1a dd       	rcall	.-1484   	; 0x29c <Fan_Stage>
		Display_LCD();
 868:	49 de       	rcall	.-878    	; 0x4fc <Display_LCD>
 86a:	cb de       	rcall	.-618    	; 0x602 <Head_spin_op>
		Head_spin_op();
 86c:	fc cf       	rjmp	.-8      	; 0x866 <main+0x4>

0000086e <__subsf3>:
 86e:	50 58       	subi	r21, 0x80	; 128

00000870 <__addsf3>:
 870:	bb 27       	eor	r27, r27
 872:	aa 27       	eor	r26, r26
 874:	0e d0       	rcall	.+28     	; 0x892 <__addsf3x>
 876:	48 c1       	rjmp	.+656    	; 0xb08 <__fp_round>
 878:	39 d1       	rcall	.+626    	; 0xaec <__fp_pscA>
 87a:	30 f0       	brcs	.+12     	; 0x888 <__addsf3+0x18>
 87c:	3e d1       	rcall	.+636    	; 0xafa <__fp_pscB>
 87e:	20 f0       	brcs	.+8      	; 0x888 <__addsf3+0x18>
 880:	31 f4       	brne	.+12     	; 0x88e <__addsf3+0x1e>
 882:	9f 3f       	cpi	r25, 0xFF	; 255
 884:	11 f4       	brne	.+4      	; 0x88a <__addsf3+0x1a>
 886:	1e f4       	brtc	.+6      	; 0x88e <__addsf3+0x1e>
 888:	2e c1       	rjmp	.+604    	; 0xae6 <__fp_nan>
 88a:	0e f4       	brtc	.+2      	; 0x88e <__addsf3+0x1e>
 88c:	e0 95       	com	r30
 88e:	e7 fb       	bst	r30, 7
 890:	24 c1       	rjmp	.+584    	; 0xada <__fp_inf>

00000892 <__addsf3x>:
 892:	e9 2f       	mov	r30, r25
 894:	4a d1       	rcall	.+660    	; 0xb2a <__fp_split3>
 896:	80 f3       	brcs	.-32     	; 0x878 <__addsf3+0x8>
 898:	ba 17       	cp	r27, r26
 89a:	62 07       	cpc	r22, r18
 89c:	73 07       	cpc	r23, r19
 89e:	84 07       	cpc	r24, r20
 8a0:	95 07       	cpc	r25, r21
 8a2:	18 f0       	brcs	.+6      	; 0x8aa <__addsf3x+0x18>
 8a4:	71 f4       	brne	.+28     	; 0x8c2 <__addsf3x+0x30>
 8a6:	9e f5       	brtc	.+102    	; 0x90e <__addsf3x+0x7c>
 8a8:	62 c1       	rjmp	.+708    	; 0xb6e <__fp_zero>
 8aa:	0e f4       	brtc	.+2      	; 0x8ae <__addsf3x+0x1c>
 8ac:	e0 95       	com	r30
 8ae:	0b 2e       	mov	r0, r27
 8b0:	ba 2f       	mov	r27, r26
 8b2:	a0 2d       	mov	r26, r0
 8b4:	0b 01       	movw	r0, r22
 8b6:	b9 01       	movw	r22, r18
 8b8:	90 01       	movw	r18, r0
 8ba:	0c 01       	movw	r0, r24
 8bc:	ca 01       	movw	r24, r20
 8be:	a0 01       	movw	r20, r0
 8c0:	11 24       	eor	r1, r1
 8c2:	ff 27       	eor	r31, r31
 8c4:	59 1b       	sub	r21, r25
 8c6:	99 f0       	breq	.+38     	; 0x8ee <__addsf3x+0x5c>
 8c8:	59 3f       	cpi	r21, 0xF9	; 249
 8ca:	50 f4       	brcc	.+20     	; 0x8e0 <__addsf3x+0x4e>
 8cc:	50 3e       	cpi	r21, 0xE0	; 224
 8ce:	68 f1       	brcs	.+90     	; 0x92a <__addsf3x+0x98>
 8d0:	1a 16       	cp	r1, r26
 8d2:	f0 40       	sbci	r31, 0x00	; 0
 8d4:	a2 2f       	mov	r26, r18
 8d6:	23 2f       	mov	r18, r19
 8d8:	34 2f       	mov	r19, r20
 8da:	44 27       	eor	r20, r20
 8dc:	58 5f       	subi	r21, 0xF8	; 248
 8de:	f3 cf       	rjmp	.-26     	; 0x8c6 <__addsf3x+0x34>
 8e0:	46 95       	lsr	r20
 8e2:	37 95       	ror	r19
 8e4:	27 95       	ror	r18
 8e6:	a7 95       	ror	r26
 8e8:	f0 40       	sbci	r31, 0x00	; 0
 8ea:	53 95       	inc	r21
 8ec:	c9 f7       	brne	.-14     	; 0x8e0 <__addsf3x+0x4e>
 8ee:	7e f4       	brtc	.+30     	; 0x90e <__addsf3x+0x7c>
 8f0:	1f 16       	cp	r1, r31
 8f2:	ba 0b       	sbc	r27, r26
 8f4:	62 0b       	sbc	r22, r18
 8f6:	73 0b       	sbc	r23, r19
 8f8:	84 0b       	sbc	r24, r20
 8fa:	ba f0       	brmi	.+46     	; 0x92a <__addsf3x+0x98>
 8fc:	91 50       	subi	r25, 0x01	; 1
 8fe:	a1 f0       	breq	.+40     	; 0x928 <__addsf3x+0x96>
 900:	ff 0f       	add	r31, r31
 902:	bb 1f       	adc	r27, r27
 904:	66 1f       	adc	r22, r22
 906:	77 1f       	adc	r23, r23
 908:	88 1f       	adc	r24, r24
 90a:	c2 f7       	brpl	.-16     	; 0x8fc <__addsf3x+0x6a>
 90c:	0e c0       	rjmp	.+28     	; 0x92a <__addsf3x+0x98>
 90e:	ba 0f       	add	r27, r26
 910:	62 1f       	adc	r22, r18
 912:	73 1f       	adc	r23, r19
 914:	84 1f       	adc	r24, r20
 916:	48 f4       	brcc	.+18     	; 0x92a <__addsf3x+0x98>
 918:	87 95       	ror	r24
 91a:	77 95       	ror	r23
 91c:	67 95       	ror	r22
 91e:	b7 95       	ror	r27
 920:	f7 95       	ror	r31
 922:	9e 3f       	cpi	r25, 0xFE	; 254
 924:	08 f0       	brcs	.+2      	; 0x928 <__addsf3x+0x96>
 926:	b3 cf       	rjmp	.-154    	; 0x88e <__addsf3+0x1e>
 928:	93 95       	inc	r25
 92a:	88 0f       	add	r24, r24
 92c:	08 f0       	brcs	.+2      	; 0x930 <__addsf3x+0x9e>
 92e:	99 27       	eor	r25, r25
 930:	ee 0f       	add	r30, r30
 932:	97 95       	ror	r25
 934:	87 95       	ror	r24
 936:	08 95       	ret

00000938 <__divsf3>:
 938:	0c d0       	rcall	.+24     	; 0x952 <__divsf3x>
 93a:	e6 c0       	rjmp	.+460    	; 0xb08 <__fp_round>
 93c:	de d0       	rcall	.+444    	; 0xafa <__fp_pscB>
 93e:	40 f0       	brcs	.+16     	; 0x950 <__divsf3+0x18>
 940:	d5 d0       	rcall	.+426    	; 0xaec <__fp_pscA>
 942:	30 f0       	brcs	.+12     	; 0x950 <__divsf3+0x18>
 944:	21 f4       	brne	.+8      	; 0x94e <__divsf3+0x16>
 946:	5f 3f       	cpi	r21, 0xFF	; 255
 948:	19 f0       	breq	.+6      	; 0x950 <__divsf3+0x18>
 94a:	c7 c0       	rjmp	.+398    	; 0xada <__fp_inf>
 94c:	51 11       	cpse	r21, r1
 94e:	10 c1       	rjmp	.+544    	; 0xb70 <__fp_szero>
 950:	ca c0       	rjmp	.+404    	; 0xae6 <__fp_nan>

00000952 <__divsf3x>:
 952:	eb d0       	rcall	.+470    	; 0xb2a <__fp_split3>
 954:	98 f3       	brcs	.-26     	; 0x93c <__divsf3+0x4>

00000956 <__divsf3_pse>:
 956:	99 23       	and	r25, r25
 958:	c9 f3       	breq	.-14     	; 0x94c <__divsf3+0x14>
 95a:	55 23       	and	r21, r21
 95c:	b1 f3       	breq	.-20     	; 0x94a <__divsf3+0x12>
 95e:	95 1b       	sub	r25, r21
 960:	55 0b       	sbc	r21, r21
 962:	bb 27       	eor	r27, r27
 964:	aa 27       	eor	r26, r26
 966:	62 17       	cp	r22, r18
 968:	73 07       	cpc	r23, r19
 96a:	84 07       	cpc	r24, r20
 96c:	38 f0       	brcs	.+14     	; 0x97c <__divsf3_pse+0x26>
 96e:	9f 5f       	subi	r25, 0xFF	; 255
 970:	5f 4f       	sbci	r21, 0xFF	; 255
 972:	22 0f       	add	r18, r18
 974:	33 1f       	adc	r19, r19
 976:	44 1f       	adc	r20, r20
 978:	aa 1f       	adc	r26, r26
 97a:	a9 f3       	breq	.-22     	; 0x966 <__divsf3_pse+0x10>
 97c:	33 d0       	rcall	.+102    	; 0x9e4 <__divsf3_pse+0x8e>
 97e:	0e 2e       	mov	r0, r30
 980:	3a f0       	brmi	.+14     	; 0x990 <__divsf3_pse+0x3a>
 982:	e0 e8       	ldi	r30, 0x80	; 128
 984:	30 d0       	rcall	.+96     	; 0x9e6 <__divsf3_pse+0x90>
 986:	91 50       	subi	r25, 0x01	; 1
 988:	50 40       	sbci	r21, 0x00	; 0
 98a:	e6 95       	lsr	r30
 98c:	00 1c       	adc	r0, r0
 98e:	ca f7       	brpl	.-14     	; 0x982 <__divsf3_pse+0x2c>
 990:	29 d0       	rcall	.+82     	; 0x9e4 <__divsf3_pse+0x8e>
 992:	fe 2f       	mov	r31, r30
 994:	27 d0       	rcall	.+78     	; 0x9e4 <__divsf3_pse+0x8e>
 996:	66 0f       	add	r22, r22
 998:	77 1f       	adc	r23, r23
 99a:	88 1f       	adc	r24, r24
 99c:	bb 1f       	adc	r27, r27
 99e:	26 17       	cp	r18, r22
 9a0:	37 07       	cpc	r19, r23
 9a2:	48 07       	cpc	r20, r24
 9a4:	ab 07       	cpc	r26, r27
 9a6:	b0 e8       	ldi	r27, 0x80	; 128
 9a8:	09 f0       	breq	.+2      	; 0x9ac <__divsf3_pse+0x56>
 9aa:	bb 0b       	sbc	r27, r27
 9ac:	80 2d       	mov	r24, r0
 9ae:	bf 01       	movw	r22, r30
 9b0:	ff 27       	eor	r31, r31
 9b2:	93 58       	subi	r25, 0x83	; 131
 9b4:	5f 4f       	sbci	r21, 0xFF	; 255
 9b6:	2a f0       	brmi	.+10     	; 0x9c2 <__divsf3_pse+0x6c>
 9b8:	9e 3f       	cpi	r25, 0xFE	; 254
 9ba:	51 05       	cpc	r21, r1
 9bc:	68 f0       	brcs	.+26     	; 0x9d8 <__divsf3_pse+0x82>
 9be:	8d c0       	rjmp	.+282    	; 0xada <__fp_inf>
 9c0:	d7 c0       	rjmp	.+430    	; 0xb70 <__fp_szero>
 9c2:	5f 3f       	cpi	r21, 0xFF	; 255
 9c4:	ec f3       	brlt	.-6      	; 0x9c0 <__divsf3_pse+0x6a>
 9c6:	98 3e       	cpi	r25, 0xE8	; 232
 9c8:	dc f3       	brlt	.-10     	; 0x9c0 <__divsf3_pse+0x6a>
 9ca:	86 95       	lsr	r24
 9cc:	77 95       	ror	r23
 9ce:	67 95       	ror	r22
 9d0:	b7 95       	ror	r27
 9d2:	f7 95       	ror	r31
 9d4:	9f 5f       	subi	r25, 0xFF	; 255
 9d6:	c9 f7       	brne	.-14     	; 0x9ca <__divsf3_pse+0x74>
 9d8:	88 0f       	add	r24, r24
 9da:	91 1d       	adc	r25, r1
 9dc:	96 95       	lsr	r25
 9de:	87 95       	ror	r24
 9e0:	97 f9       	bld	r25, 7
 9e2:	08 95       	ret
 9e4:	e1 e0       	ldi	r30, 0x01	; 1
 9e6:	66 0f       	add	r22, r22
 9e8:	77 1f       	adc	r23, r23
 9ea:	88 1f       	adc	r24, r24
 9ec:	bb 1f       	adc	r27, r27
 9ee:	62 17       	cp	r22, r18
 9f0:	73 07       	cpc	r23, r19
 9f2:	84 07       	cpc	r24, r20
 9f4:	ba 07       	cpc	r27, r26
 9f6:	20 f0       	brcs	.+8      	; 0xa00 <__divsf3_pse+0xaa>
 9f8:	62 1b       	sub	r22, r18
 9fa:	73 0b       	sbc	r23, r19
 9fc:	84 0b       	sbc	r24, r20
 9fe:	ba 0b       	sbc	r27, r26
 a00:	ee 1f       	adc	r30, r30
 a02:	88 f7       	brcc	.-30     	; 0x9e6 <__divsf3_pse+0x90>
 a04:	e0 95       	com	r30
 a06:	08 95       	ret

00000a08 <__fixunssfsi>:
 a08:	98 d0       	rcall	.+304    	; 0xb3a <__fp_splitA>
 a0a:	88 f0       	brcs	.+34     	; 0xa2e <__fixunssfsi+0x26>
 a0c:	9f 57       	subi	r25, 0x7F	; 127
 a0e:	90 f0       	brcs	.+36     	; 0xa34 <__fixunssfsi+0x2c>
 a10:	b9 2f       	mov	r27, r25
 a12:	99 27       	eor	r25, r25
 a14:	b7 51       	subi	r27, 0x17	; 23
 a16:	a0 f0       	brcs	.+40     	; 0xa40 <__fixunssfsi+0x38>
 a18:	d1 f0       	breq	.+52     	; 0xa4e <__fixunssfsi+0x46>
 a1a:	66 0f       	add	r22, r22
 a1c:	77 1f       	adc	r23, r23
 a1e:	88 1f       	adc	r24, r24
 a20:	99 1f       	adc	r25, r25
 a22:	1a f0       	brmi	.+6      	; 0xa2a <__fixunssfsi+0x22>
 a24:	ba 95       	dec	r27
 a26:	c9 f7       	brne	.-14     	; 0xa1a <__fixunssfsi+0x12>
 a28:	12 c0       	rjmp	.+36     	; 0xa4e <__fixunssfsi+0x46>
 a2a:	b1 30       	cpi	r27, 0x01	; 1
 a2c:	81 f0       	breq	.+32     	; 0xa4e <__fixunssfsi+0x46>
 a2e:	9f d0       	rcall	.+318    	; 0xb6e <__fp_zero>
 a30:	b1 e0       	ldi	r27, 0x01	; 1
 a32:	08 95       	ret
 a34:	9c c0       	rjmp	.+312    	; 0xb6e <__fp_zero>
 a36:	67 2f       	mov	r22, r23
 a38:	78 2f       	mov	r23, r24
 a3a:	88 27       	eor	r24, r24
 a3c:	b8 5f       	subi	r27, 0xF8	; 248
 a3e:	39 f0       	breq	.+14     	; 0xa4e <__fixunssfsi+0x46>
 a40:	b9 3f       	cpi	r27, 0xF9	; 249
 a42:	cc f3       	brlt	.-14     	; 0xa36 <__fixunssfsi+0x2e>
 a44:	86 95       	lsr	r24
 a46:	77 95       	ror	r23
 a48:	67 95       	ror	r22
 a4a:	b3 95       	inc	r27
 a4c:	d9 f7       	brne	.-10     	; 0xa44 <__fixunssfsi+0x3c>
 a4e:	3e f4       	brtc	.+14     	; 0xa5e <__fixunssfsi+0x56>
 a50:	90 95       	com	r25
 a52:	80 95       	com	r24
 a54:	70 95       	com	r23
 a56:	61 95       	neg	r22
 a58:	7f 4f       	sbci	r23, 0xFF	; 255
 a5a:	8f 4f       	sbci	r24, 0xFF	; 255
 a5c:	9f 4f       	sbci	r25, 0xFF	; 255
 a5e:	08 95       	ret

00000a60 <__floatunsisf>:
 a60:	e8 94       	clt
 a62:	09 c0       	rjmp	.+18     	; 0xa76 <__floatsisf+0x12>

00000a64 <__floatsisf>:
 a64:	97 fb       	bst	r25, 7
 a66:	3e f4       	brtc	.+14     	; 0xa76 <__floatsisf+0x12>
 a68:	90 95       	com	r25
 a6a:	80 95       	com	r24
 a6c:	70 95       	com	r23
 a6e:	61 95       	neg	r22
 a70:	7f 4f       	sbci	r23, 0xFF	; 255
 a72:	8f 4f       	sbci	r24, 0xFF	; 255
 a74:	9f 4f       	sbci	r25, 0xFF	; 255
 a76:	99 23       	and	r25, r25
 a78:	a9 f0       	breq	.+42     	; 0xaa4 <__floatsisf+0x40>
 a7a:	f9 2f       	mov	r31, r25
 a7c:	96 e9       	ldi	r25, 0x96	; 150
 a7e:	bb 27       	eor	r27, r27
 a80:	93 95       	inc	r25
 a82:	f6 95       	lsr	r31
 a84:	87 95       	ror	r24
 a86:	77 95       	ror	r23
 a88:	67 95       	ror	r22
 a8a:	b7 95       	ror	r27
 a8c:	f1 11       	cpse	r31, r1
 a8e:	f8 cf       	rjmp	.-16     	; 0xa80 <__floatsisf+0x1c>
 a90:	fa f4       	brpl	.+62     	; 0xad0 <__floatsisf+0x6c>
 a92:	bb 0f       	add	r27, r27
 a94:	11 f4       	brne	.+4      	; 0xa9a <__floatsisf+0x36>
 a96:	60 ff       	sbrs	r22, 0
 a98:	1b c0       	rjmp	.+54     	; 0xad0 <__floatsisf+0x6c>
 a9a:	6f 5f       	subi	r22, 0xFF	; 255
 a9c:	7f 4f       	sbci	r23, 0xFF	; 255
 a9e:	8f 4f       	sbci	r24, 0xFF	; 255
 aa0:	9f 4f       	sbci	r25, 0xFF	; 255
 aa2:	16 c0       	rjmp	.+44     	; 0xad0 <__floatsisf+0x6c>
 aa4:	88 23       	and	r24, r24
 aa6:	11 f0       	breq	.+4      	; 0xaac <__floatsisf+0x48>
 aa8:	96 e9       	ldi	r25, 0x96	; 150
 aaa:	11 c0       	rjmp	.+34     	; 0xace <__floatsisf+0x6a>
 aac:	77 23       	and	r23, r23
 aae:	21 f0       	breq	.+8      	; 0xab8 <__floatsisf+0x54>
 ab0:	9e e8       	ldi	r25, 0x8E	; 142
 ab2:	87 2f       	mov	r24, r23
 ab4:	76 2f       	mov	r23, r22
 ab6:	05 c0       	rjmp	.+10     	; 0xac2 <__floatsisf+0x5e>
 ab8:	66 23       	and	r22, r22
 aba:	71 f0       	breq	.+28     	; 0xad8 <__floatsisf+0x74>
 abc:	96 e8       	ldi	r25, 0x86	; 134
 abe:	86 2f       	mov	r24, r22
 ac0:	70 e0       	ldi	r23, 0x00	; 0
 ac2:	60 e0       	ldi	r22, 0x00	; 0
 ac4:	2a f0       	brmi	.+10     	; 0xad0 <__floatsisf+0x6c>
 ac6:	9a 95       	dec	r25
 ac8:	66 0f       	add	r22, r22
 aca:	77 1f       	adc	r23, r23
 acc:	88 1f       	adc	r24, r24
 ace:	da f7       	brpl	.-10     	; 0xac6 <__floatsisf+0x62>
 ad0:	88 0f       	add	r24, r24
 ad2:	96 95       	lsr	r25
 ad4:	87 95       	ror	r24
 ad6:	97 f9       	bld	r25, 7
 ad8:	08 95       	ret

00000ada <__fp_inf>:
 ada:	97 f9       	bld	r25, 7
 adc:	9f 67       	ori	r25, 0x7F	; 127
 ade:	80 e8       	ldi	r24, 0x80	; 128
 ae0:	70 e0       	ldi	r23, 0x00	; 0
 ae2:	60 e0       	ldi	r22, 0x00	; 0
 ae4:	08 95       	ret

00000ae6 <__fp_nan>:
 ae6:	9f ef       	ldi	r25, 0xFF	; 255
 ae8:	80 ec       	ldi	r24, 0xC0	; 192
 aea:	08 95       	ret

00000aec <__fp_pscA>:
 aec:	00 24       	eor	r0, r0
 aee:	0a 94       	dec	r0
 af0:	16 16       	cp	r1, r22
 af2:	17 06       	cpc	r1, r23
 af4:	18 06       	cpc	r1, r24
 af6:	09 06       	cpc	r0, r25
 af8:	08 95       	ret

00000afa <__fp_pscB>:
 afa:	00 24       	eor	r0, r0
 afc:	0a 94       	dec	r0
 afe:	12 16       	cp	r1, r18
 b00:	13 06       	cpc	r1, r19
 b02:	14 06       	cpc	r1, r20
 b04:	05 06       	cpc	r0, r21
 b06:	08 95       	ret

00000b08 <__fp_round>:
 b08:	09 2e       	mov	r0, r25
 b0a:	03 94       	inc	r0
 b0c:	00 0c       	add	r0, r0
 b0e:	11 f4       	brne	.+4      	; 0xb14 <__fp_round+0xc>
 b10:	88 23       	and	r24, r24
 b12:	52 f0       	brmi	.+20     	; 0xb28 <__fp_round+0x20>
 b14:	bb 0f       	add	r27, r27
 b16:	40 f4       	brcc	.+16     	; 0xb28 <__fp_round+0x20>
 b18:	bf 2b       	or	r27, r31
 b1a:	11 f4       	brne	.+4      	; 0xb20 <__fp_round+0x18>
 b1c:	60 ff       	sbrs	r22, 0
 b1e:	04 c0       	rjmp	.+8      	; 0xb28 <__fp_round+0x20>
 b20:	6f 5f       	subi	r22, 0xFF	; 255
 b22:	7f 4f       	sbci	r23, 0xFF	; 255
 b24:	8f 4f       	sbci	r24, 0xFF	; 255
 b26:	9f 4f       	sbci	r25, 0xFF	; 255
 b28:	08 95       	ret

00000b2a <__fp_split3>:
 b2a:	57 fd       	sbrc	r21, 7
 b2c:	90 58       	subi	r25, 0x80	; 128
 b2e:	44 0f       	add	r20, r20
 b30:	55 1f       	adc	r21, r21
 b32:	59 f0       	breq	.+22     	; 0xb4a <__fp_splitA+0x10>
 b34:	5f 3f       	cpi	r21, 0xFF	; 255
 b36:	71 f0       	breq	.+28     	; 0xb54 <__fp_splitA+0x1a>
 b38:	47 95       	ror	r20

00000b3a <__fp_splitA>:
 b3a:	88 0f       	add	r24, r24
 b3c:	97 fb       	bst	r25, 7
 b3e:	99 1f       	adc	r25, r25
 b40:	61 f0       	breq	.+24     	; 0xb5a <__fp_splitA+0x20>
 b42:	9f 3f       	cpi	r25, 0xFF	; 255
 b44:	79 f0       	breq	.+30     	; 0xb64 <__fp_splitA+0x2a>
 b46:	87 95       	ror	r24
 b48:	08 95       	ret
 b4a:	12 16       	cp	r1, r18
 b4c:	13 06       	cpc	r1, r19
 b4e:	14 06       	cpc	r1, r20
 b50:	55 1f       	adc	r21, r21
 b52:	f2 cf       	rjmp	.-28     	; 0xb38 <__fp_split3+0xe>
 b54:	46 95       	lsr	r20
 b56:	f1 df       	rcall	.-30     	; 0xb3a <__fp_splitA>
 b58:	08 c0       	rjmp	.+16     	; 0xb6a <__fp_splitA+0x30>
 b5a:	16 16       	cp	r1, r22
 b5c:	17 06       	cpc	r1, r23
 b5e:	18 06       	cpc	r1, r24
 b60:	99 1f       	adc	r25, r25
 b62:	f1 cf       	rjmp	.-30     	; 0xb46 <__fp_splitA+0xc>
 b64:	86 95       	lsr	r24
 b66:	71 05       	cpc	r23, r1
 b68:	61 05       	cpc	r22, r1
 b6a:	08 94       	sec
 b6c:	08 95       	ret

00000b6e <__fp_zero>:
 b6e:	e8 94       	clt

00000b70 <__fp_szero>:
 b70:	bb 27       	eor	r27, r27
 b72:	66 27       	eor	r22, r22
 b74:	77 27       	eor	r23, r23
 b76:	cb 01       	movw	r24, r22
 b78:	97 f9       	bld	r25, 7
 b7a:	08 95       	ret

00000b7c <__mulsf3>:
 b7c:	0b d0       	rcall	.+22     	; 0xb94 <__mulsf3x>
 b7e:	c4 cf       	rjmp	.-120    	; 0xb08 <__fp_round>
 b80:	b5 df       	rcall	.-150    	; 0xaec <__fp_pscA>
 b82:	28 f0       	brcs	.+10     	; 0xb8e <__mulsf3+0x12>
 b84:	ba df       	rcall	.-140    	; 0xafa <__fp_pscB>
 b86:	18 f0       	brcs	.+6      	; 0xb8e <__mulsf3+0x12>
 b88:	95 23       	and	r25, r21
 b8a:	09 f0       	breq	.+2      	; 0xb8e <__mulsf3+0x12>
 b8c:	a6 cf       	rjmp	.-180    	; 0xada <__fp_inf>
 b8e:	ab cf       	rjmp	.-170    	; 0xae6 <__fp_nan>
 b90:	11 24       	eor	r1, r1
 b92:	ee cf       	rjmp	.-36     	; 0xb70 <__fp_szero>

00000b94 <__mulsf3x>:
 b94:	ca df       	rcall	.-108    	; 0xb2a <__fp_split3>
 b96:	a0 f3       	brcs	.-24     	; 0xb80 <__mulsf3+0x4>

00000b98 <__mulsf3_pse>:
 b98:	95 9f       	mul	r25, r21
 b9a:	d1 f3       	breq	.-12     	; 0xb90 <__mulsf3+0x14>
 b9c:	95 0f       	add	r25, r21
 b9e:	50 e0       	ldi	r21, 0x00	; 0
 ba0:	55 1f       	adc	r21, r21
 ba2:	62 9f       	mul	r22, r18
 ba4:	f0 01       	movw	r30, r0
 ba6:	72 9f       	mul	r23, r18
 ba8:	bb 27       	eor	r27, r27
 baa:	f0 0d       	add	r31, r0
 bac:	b1 1d       	adc	r27, r1
 bae:	63 9f       	mul	r22, r19
 bb0:	aa 27       	eor	r26, r26
 bb2:	f0 0d       	add	r31, r0
 bb4:	b1 1d       	adc	r27, r1
 bb6:	aa 1f       	adc	r26, r26
 bb8:	64 9f       	mul	r22, r20
 bba:	66 27       	eor	r22, r22
 bbc:	b0 0d       	add	r27, r0
 bbe:	a1 1d       	adc	r26, r1
 bc0:	66 1f       	adc	r22, r22
 bc2:	82 9f       	mul	r24, r18
 bc4:	22 27       	eor	r18, r18
 bc6:	b0 0d       	add	r27, r0
 bc8:	a1 1d       	adc	r26, r1
 bca:	62 1f       	adc	r22, r18
 bcc:	73 9f       	mul	r23, r19
 bce:	b0 0d       	add	r27, r0
 bd0:	a1 1d       	adc	r26, r1
 bd2:	62 1f       	adc	r22, r18
 bd4:	83 9f       	mul	r24, r19
 bd6:	a0 0d       	add	r26, r0
 bd8:	61 1d       	adc	r22, r1
 bda:	22 1f       	adc	r18, r18
 bdc:	74 9f       	mul	r23, r20
 bde:	33 27       	eor	r19, r19
 be0:	a0 0d       	add	r26, r0
 be2:	61 1d       	adc	r22, r1
 be4:	23 1f       	adc	r18, r19
 be6:	84 9f       	mul	r24, r20
 be8:	60 0d       	add	r22, r0
 bea:	21 1d       	adc	r18, r1
 bec:	82 2f       	mov	r24, r18
 bee:	76 2f       	mov	r23, r22
 bf0:	6a 2f       	mov	r22, r26
 bf2:	11 24       	eor	r1, r1
 bf4:	9f 57       	subi	r25, 0x7F	; 127
 bf6:	50 40       	sbci	r21, 0x00	; 0
 bf8:	8a f0       	brmi	.+34     	; 0xc1c <__mulsf3_pse+0x84>
 bfa:	e1 f0       	breq	.+56     	; 0xc34 <__mulsf3_pse+0x9c>
 bfc:	88 23       	and	r24, r24
 bfe:	4a f0       	brmi	.+18     	; 0xc12 <__mulsf3_pse+0x7a>
 c00:	ee 0f       	add	r30, r30
 c02:	ff 1f       	adc	r31, r31
 c04:	bb 1f       	adc	r27, r27
 c06:	66 1f       	adc	r22, r22
 c08:	77 1f       	adc	r23, r23
 c0a:	88 1f       	adc	r24, r24
 c0c:	91 50       	subi	r25, 0x01	; 1
 c0e:	50 40       	sbci	r21, 0x00	; 0
 c10:	a9 f7       	brne	.-22     	; 0xbfc <__mulsf3_pse+0x64>
 c12:	9e 3f       	cpi	r25, 0xFE	; 254
 c14:	51 05       	cpc	r21, r1
 c16:	70 f0       	brcs	.+28     	; 0xc34 <__mulsf3_pse+0x9c>
 c18:	60 cf       	rjmp	.-320    	; 0xada <__fp_inf>
 c1a:	aa cf       	rjmp	.-172    	; 0xb70 <__fp_szero>
 c1c:	5f 3f       	cpi	r21, 0xFF	; 255
 c1e:	ec f3       	brlt	.-6      	; 0xc1a <__mulsf3_pse+0x82>
 c20:	98 3e       	cpi	r25, 0xE8	; 232
 c22:	dc f3       	brlt	.-10     	; 0xc1a <__mulsf3_pse+0x82>
 c24:	86 95       	lsr	r24
 c26:	77 95       	ror	r23
 c28:	67 95       	ror	r22
 c2a:	b7 95       	ror	r27
 c2c:	f7 95       	ror	r31
 c2e:	e7 95       	ror	r30
 c30:	9f 5f       	subi	r25, 0xFF	; 255
 c32:	c1 f7       	brne	.-16     	; 0xc24 <__mulsf3_pse+0x8c>
 c34:	fe 2b       	or	r31, r30
 c36:	88 0f       	add	r24, r24
 c38:	91 1d       	adc	r25, r1
 c3a:	96 95       	lsr	r25
 c3c:	87 95       	ror	r24
 c3e:	97 f9       	bld	r25, 7
 c40:	08 95       	ret

00000c42 <_exit>:
 c42:	f8 94       	cli

00000c44 <__stop_program>:
 c44:	ff cf       	rjmp	.-2      	; 0xc44 <__stop_program>
